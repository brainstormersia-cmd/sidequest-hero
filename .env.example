# SideQuest environment template
# Rename to .env and fill in with project-specific values.

# === Frontend (Vite) ===
# Supabase project URL (https://<project>.supabase.co)
VITE_SUPABASE_URL="https://your-project.supabase.co"
# Supabase anon/public key for client-side access
VITE_SUPABASE_ANON_KEY="your-anon-key"
# Optional: enable Supabase realtime over WebSockets when self-hosting Edge Functions
VITE_SUPABASE_REALTIME_URL=""

# Base URL exposed to Supabase auth redirect and Stripe links
VITE_SITE_URL="http://localhost:5173"
# Optional feature flags for beta functionality (comma-separated keys)
VITE_FEATURE_FLAGS=""

# Stripe publishable key used by the web client (test mode recommended)
VITE_STRIPE_PUBLISHABLE_KEY="pk_test_xxx"
# Stripe Connect account ID if operating a platform account
VITE_STRIPE_CONNECT_ACCOUNT=""

# Mapbox Configuration (optional - for static maps in dev)
# Get your token from https://account.mapbox.com/
# Note: MAPBOX_TOKEN for edge functions must be set via Supabase Secrets
# Run: supabase secrets set MAPBOX_TOKEN=your-token --project-ref YOUR_PROJECT_REF
VITE_MAPBOX_PUBLIC="pk.eyJ1IjoieW91ci11c2VyIiwiYSI6ImNrY..."

# === Backend / Tooling (Node, Supabase functions, CI) ===
# Supabase service key for server-side operations (do NOT expose in client)
SUPABASE_SERVICE_ROLE_KEY=""
# Supabase JWT secret, required if verifying tokens manually
SUPABASE_JWT_SECRET=""
# Stripe secret key for webhooks / payouts (test mode recommended)
STRIPE_SECRET_KEY="sk_test_xxx"
# Stripe webhook secret configured in the dashboard
STRIPE_WEBHOOK_SECRET=""
# Optional: Stripe Connect client ID for OAuth onboarding
STRIPE_CONNECT_CLIENT_ID=""

# Postgres connection string if running migrations locally (Supabase CLI env)
DATABASE_URL="postgresql://postgres:postgres@localhost:6543/postgres"
# Path to Prisma/Drizzle/Supabase migrations (used by scripts)
DB_MIGRATIONS_DIR="./supabase/migrations"

# Logging / observability defaults
LOG_LEVEL="info"
SENTRY_DSN=""
